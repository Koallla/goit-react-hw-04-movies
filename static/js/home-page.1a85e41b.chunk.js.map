{"version":3,"sources":["services/articles-api.js","components/MoviesList.js","pages/Home.js"],"names":["axios","defaults","baseURL","KEY","fetchMoviesTrending","category","type","time","url","get","then","response","data","results","fetchMovieWithId","id","fetchMovieSearch","search","fetchMovieCast","fetchMovieReviews","withRouter","movies","location","map","movie","key","to","pathname","state","from","title","Home","setState","this","Component"],"mappings":"qHAAA,+LAEAA,IAAMC,SAASC,QAAU,gCACzB,IAAMC,EAAM,4CAENC,EAAsB,WAItB,IAHJC,EAGG,uDAHQ,WACXC,EAEG,uDAFI,QACPC,EACG,uDADI,MAEDC,EAAG,UAAMH,EAAN,YAAkBC,EAAlB,YAA0BC,GAA1B,OAAiCJ,GAC1C,OAAOH,IAAMS,IAAID,GAAKE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YAGjDC,EAAmB,SAAAC,GACvB,OAAOf,IAAMS,IAAN,iBAAoBM,GAApB,OAAyBZ,IAAOO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAG7DI,EAAmB,SAAAC,GACvB,OAAOjB,IACJS,IADI,uBACgBN,EADhB,kBAC6Bc,IACjCP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAGzBM,EAAiB,SAAAH,GACrB,OAAOf,IACJS,IADI,iBACUM,EADV,mBACuBZ,IAC3BO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAGzBO,EAAoB,SAAAJ,GACxB,OAAOf,IACJS,IADI,iBACUM,EADV,mBACuBZ,IAC3BO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,gCCjC/B,kCAkCeQ,iBA7BI,SAAC,GAAD,QAAGC,cAAH,MAAY,GAAZ,EAAgBC,EAAhB,EAAgBA,SAAhB,OACjB,4BACGD,EAAOE,KAAI,SAAAC,GAAK,OACf,wBAAIC,IAAKD,EAAMT,IACb,kBAAC,IAAD,CACEW,GAAI,CACFC,SAAS,WAAD,OAAaH,EAAMT,IAC3Ba,MAAO,CAAEC,KAAMP,KAGhBE,EAAMM,gB,2JCXIC,E,2MACnBH,MAAQ,CACNP,OAAQ,I,mFAGW,IAAD,OAClBjB,cAAsBM,MAAK,SAAAW,GAAM,OAAI,EAAKW,SAAS,CAAEX,gB,+BAG7C,IACAA,EAAWY,KAAKL,MAAhBP,OAER,OACE,6BACE,8CACA,kBAAC,IAAD,CAAYA,OAAQA,S,GAfMa","file":"static/js/home-page.1a85e41b.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '?api_key=cff0af22b80c776aec1c17ab43adb9ad';\n\nconst fetchMoviesTrending = (\n  category = 'trending',\n  type = 'movie',\n  time = 'day',\n) => {\n  const url = `${category}/${type}/${time}${KEY}`;\n  return axios.get(url).then(response => response.data.results);\n};\n\nconst fetchMovieWithId = id => {\n  return axios.get(`/movie/${id}${KEY}`).then(response => response.data);\n};\n\nconst fetchMovieSearch = search => {\n  return axios\n    .get(`/search/movie${KEY}&query=${search}`)\n    .then(response => response.data);\n};\n\nconst fetchMovieCast = id => {\n  return axios\n    .get(`/movie/${id}/credits${KEY}`)\n    .then(response => response.data);\n};\n\nconst fetchMovieReviews = id => {\n  return axios\n    .get(`/movie/${id}/reviews${KEY}`)\n    .then(response => response.data);\n};\n\nexport {\n  fetchMoviesTrending,\n  fetchMovieWithId,\n  fetchMovieSearch,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n","import React from 'react';\nimport T from 'prop-types';\n\nimport { Link, withRouter } from 'react-router-dom';\n\nconst MoviesList = ({ movies = [], location }) => (\n  <ul>\n    {movies.map(movie => (\n      <li key={movie.id}>\n        <Link\n          to={{\n            pathname: `/movies/${movie.id}`,\n            state: { from: location },\n          }}\n        >\n          {movie.title}\n        </Link>\n      </li>\n    ))}\n  </ul>\n);\n\nMoviesList.propTypes = {\n  movies: T.arrayOf(\n    T.shape({\n      id: T.number,\n      title: T.string,\n    }),\n  ).isRequired,\n  location: T.shape({\n    pathname: T.string,\n  }).isRequired,\n};\n\nexport default withRouter(MoviesList);\n","import React, { Component } from 'react';\nimport { fetchMoviesTrending } from '../services/articles-api';\nimport MoviesList from '../components/MoviesList';\n\nexport default class Home extends Component {\n  state = {\n    movies: [],\n  };\n\n  componentDidMount() {\n    fetchMoviesTrending().then(movies => this.setState({ movies }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div>\n        <h1>Trending today</h1>\n        <MoviesList movies={movies} />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}