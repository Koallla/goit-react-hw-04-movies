{"version":3,"sources":["pages/Cast.js"],"names":["Cast","state","casts","id","this","props","match","params","fetchMovieCast","then","data","setState","cast","map","key","src","profile_path","alt","name","Component"],"mappings":"wOAMqBA,E,2MACnBC,MAAQ,CACNC,MAAO,I,mFAGY,IAAD,OACZC,EAAgBC,KAAKC,MARGC,MAAMC,OAAOJ,GAS3CK,YAAeL,GAAIM,MAAK,SAAAC,GAAI,OAAI,EAAKC,SAAS,CAAET,MAAOQ,EAAKE,Y,+BAGpD,IACAV,EAAUE,KAAKH,MAAfC,MACR,OACE,6BACE,oCACA,4BACGA,EAAMW,KAAI,SAAAD,GAAI,OACb,wBAAIE,IAAKF,EAAKT,IACZ,yBAAKY,IArBH,kCAqBqBH,EAAKI,aAAcC,IAAKL,EAAKM,OACnDN,EAAKM,e,GAnBcC","file":"static/js/cast-page.5263795c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { fetchMovieCast } from '../services/articles-api';\n\nconst linkPoster = `https://image.tmdb.org/t/p/w300`;\nconst getMovieId = props => props.match.params.id;\n\nexport default class Cast extends Component {\n  state = {\n    casts: [],\n  };\n\n  componentDidMount() {\n    const id = getMovieId(this.props);\n    fetchMovieCast(id).then(data => this.setState({ casts: data.cast }));\n  }\n\n  render() {\n    const { casts } = this.state;\n    return (\n      <div>\n        <h1>CAST</h1>\n        <ul>\n          {casts.map(cast => (\n            <li key={cast.id}>\n              <img src={linkPoster + cast.profile_path} alt={cast.name} />\n              {cast.name}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}